name: Test GHCR Push

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKER_PROXY_URL: ${{ vars.DOCKER_PROXY_URL || secrets.DOCKER_PROXY_URL || 'http://81.71.93.183:10811' }}

jobs:
  test-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      HTTP_PROXY: ${{ env.DOCKER_PROXY_URL }}
      HTTPS_PROXY: ${{ env.DOCKER_PROXY_URL }}
      http_proxy: ${{ env.DOCKER_PROXY_URL }}
      https_proxy: ${{ env.DOCKER_PROXY_URL }}
      ALL_PROXY: ${{ env.DOCKER_PROXY_URL }}
      all_proxy: ${{ env.DOCKER_PROXY_URL }}
      NO_PROXY: localhost,127.0.0.1,::1
      no_proxy: localhost,127.0.0.1,::1
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push test image
        run: |
          TAG="test-$(date +%s)"
          IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG}"
          
          echo "Building test image: ${IMAGE}"
          docker build -t "${IMAGE}" -f- . <<EOF
          FROM alpine:latest
          RUN echo "Test image"
          LABEL org.opencontainers.image.source=https://github.com/${{ github.repository }}
          EOF
          
          echo "Pushing test image..."
          docker push "${IMAGE}"
          
          echo "Push successful!"
          docker images | grep ${{ env.IMAGE_NAME }}
      
      - name: Verify push
        run: |
          echo "Checking if package exists..."
          curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/users/${{ github.actor }}/packages/container/$(echo ${{ env.IMAGE_NAME }} | cut -d'/' -f2)/versions || echo "Package not found yet"
