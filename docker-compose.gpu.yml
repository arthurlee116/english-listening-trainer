version: "3.9"

x-app-env: &app-env
  NODE_ENV: ${NODE_ENV:-production}
  NEXT_TELEMETRY_DISABLED: "1"
  HOSTNAME: 0.0.0.0
  PORT: 3000
  PYTORCH_ENABLE_MPS_FALLBACK: "0"
  KOKORO_DEVICE: cuda

services:
  migrate:
    image: ${IMAGE_TAG:-ghcr.io/arthurlee116/english-listening-trainer:latest}
    # Uncomment below for local development builds
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    #   target: runtime
    command: ["npx", "prisma", "migrate", "deploy"]
    user: "1001:1001"
    env_file:
      - .env.production
    environment:
      <<: *app-env
    volumes:
      - type: bind
        source: ./data
        target: /app/data
      - type: bind
        source: ./public/audio
        target: /app/public/audio
      - type: bind
        source: ./logs
        target: /app/logs
      - type: bind
        source: ./backups
        target: /app/backups
    restart: "no"
    profiles:
      - migrate
    networks:
      - app-net

  app:
    image: ${IMAGE_TAG:-ghcr.io/arthurlee116/english-listening-trainer:latest}
    # Uncomment below for local development builds
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    #   target: runtime
    restart: unless-stopped
    env_file:
      - .env.production
    environment:
      <<: *app-env
      DATABASE_URL: ${DATABASE_URL:-file:/app/data/app.db}
      http_proxy: ${http_proxy:-http://81.71.93.183:10811}
      https_proxy: ${https_proxy:-http://81.71.93.183:10811}
      HTTP_PROXY: ${HTTP_PROXY:-http://81.71.93.183:10811}
      HTTPS_PROXY: ${HTTPS_PROXY:-http://81.71.93.183:10811}
      no_proxy: localhost,127.0.0.1
    ports:
      - "${PORT:-3000}:3000"
    volumes:
      - type: bind
        source: ./data
        target: /app/data
      - type: bind
        source: ./public/audio
        target: /app/public/audio
      - type: bind
        source: ./logs
        target: /app/logs
      - type: bind
        source: ./backups
        target: /app/backups
      - type: bind
        source: ./kokoro-local/.cache
        target: /app/kokoro-local/.cache
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    networks:
      - app-net

  admin:
    image: ${IMAGE_TAG:-ghcr.io/arthurlee116/english-listening-trainer:latest}
    profiles:
      - admin
    command: ["npm", "run", "admin"]
    env_file:
      - .env.production
    environment:
      <<: *app-env
      PORT: 3005
    ports:
      - "3005:3005"
    volumes:
      - type: bind
        source: ./data
        target: /app/data
      - type: bind
        source: ./public/audio
        target: /app/public/audio
      - type: bind
        source: ./logs
        target: /app/logs
    depends_on:
      app:
        condition: service_started
    networks:
      - app-net

networks:
  app-net:
    driver: bridge
